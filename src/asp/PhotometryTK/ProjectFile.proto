package asp.pho;

message ProjectMeta {
    optional string name = 1; // Optional Description

    // Properties of the run
    optional int32 max_iterations = 2 [default=100];
    optional int32 current_iteration = 3 [default=0];
    enum ReflectanceType {
        NONE = 0;
        LAMBERTIAN = 1;
        LUNARL_GASKALL = 2;
        LUNARL_MCEWEN = 3;
    }
    required ReflectanceType reflectance = 4 [default=NONE];
    optional double rel_tol = 5 [default=1e-2]; // Minimum improvement between
                                                // iterations
    optional double abs_tol = 6 [default=1e-2]; // Absolute shut off  of error

    required int32 num_cameras = 7;
}

message CameraMeta {
    required string name = 1;
    required double exposure_t = 2;
    optional double ephemeris_t = 3;
    optional int32 base_transaction_id = 4;
    repeated double sun_vec = 5;
    repeated double cam_vec = 6;
}

// Project File Service
// ------------------------------------------------

message ProjectOpenRequest {
  required string name = 1;
}
message ProjectOpenReply {
  required ProjectMeta meta = 1;
  required int32 project_id = 2;
}


message ProjectUpdateRequest {
  required int32 project_id = 1;
  required int32 iteration = 2;
}

message ProjectUpdateReply {
  required int32 project_id = 1; // echo if success
}


message CameraCreateRequest {
  required int32 project_id = 1;
  required CameraMeta meta = 2;
}
message CameraCreateReply {
  required int32 project_id = 1; // echo if success
  required int32 camera_id = 2;  // assigns number
}


message CameraReadRequest {
  required int32 project_id = 1;
  required int32 camera_id = 2;
}
message CameraReadReply {
  required int32 project_id = 1; // echo if success
  required int32 camera_id = 2;  // echo if success
  required CameraMeta meta = 3;
}


message CameraWriteRequest {
  required int32 project_id = 1;
  required int32 camera_id  = 2;
  required CameraMeta meta  = 3;
}
message CameraWriteReply {
  required int32 project_id = 1; // echo if success
  required int32 camera_id  = 2; // echo if success
}

service ProjectService {
  // Project start
  rpc OpenRequest (ProjectOpenRequest) returns (ProjectOpenReply);

  // Project Interface
  rpc ProjectUpdate (ProjectUpdateRequest) returns (ProjectUpdateReply);

  // Camera Interface
  rpc CameraCreate (CameraCreateRequest) returns (CameraCreateReply);
  rpc CameraRead (CameraReadRequest) returns (CameraReadReply);
  rpc CameraWrite (CameraWriteRequest) returns (CameraWriteReply);
}