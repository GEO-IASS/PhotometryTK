#PBS -S /bin/bash
#PBS -j oe
#PBS -l select=8:ncpus=8:model=har
#PBS -l walltime=8:00:00
#PBS -N PhotometryTK
#PBS -q normal

module load mpi-mvapich2/1.4.1/intel
MPICMD="mpiexec -comm none -pernode"
SERVER=$(hostname)
PTKFILE=apollo_combined.ptk
SERVERURL=zmq://$SERVER:5566/$PTKFILE
SCRIPTDIR=/u/zmoratto/nobackup/Moon/apollo_metric/workdir

# Fire up index server
cd $SCRIPTDIR
ptk_server $PTKFILE --url zmq://*:5566 &
INDEX_PID=$!
sleep 10

# Double check the index server just didn't die
if ps -p $INDEX_PID > /dev/null
then
    echo "Good to go!"
else
    echo "Failed to start ptk server"
    exit
fi

# You need to have already started up an photk_server. I'm doing so on
# the front end node. I think this is okay since most of the time that
# process will just be idling.

# Run the image insertation process
$MPICMD /u/zmoratto/projects/PhotometryTK/scripts/phodrg2plate_serial.sh jobs $SERVERURL
if [[ $? -ne 0 ]]; then
    echo "Failed PhoDRG2Plate, job " $[$?-256]
    exit
fi

# # Run the generate albedo and solve time at a higher level
# for i in {0..29}
# do $MPICMD $SCRIPTDIR/phoitalbedo_serial.sh 8 7 $SERVERURL
# if [[ $? -ne 0 ]]; then
#     echo "Failed PhoitAlbedo, job " $[$?-256]
#     exit
# fi
# $MPICMD $SCRIPTDIR/phoittime_serial.sh 8 7 $SERVERURL
# if [[ $? -ne 0 ]]; then
#     echo "Failed Phoittime, job " $[$?-256]
#     exit
# fi
# done

# # Generate the albedo at the native resolution
# $MPICMD $SCRIPTDIR/phoitalbedo_serial.sh 8 9 $SERVERURL

# if [[ $? -ne 0 ]]; then
#     echo "Failed final PhoitAlbedo, job " $[$?-256]
#     exit
# fi

# Finish up and kill the index_server
kill $INDEX_PID
sleep 20